<Window x:Class="WPFiftool.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:WPFiftool.Views"
        xmlns:FileControl="clr-namespace:WPFiftool.ViewModels"
        xmlns:ports="clr-namespace:System.IO.Ports;assembly=System"
        mc:Ignorable="d"
        Style="{StaticResource MaterialDesignWindow}" Closing="Window_Closing"
        Title="Simulation IF Tool ver 0.1" Icon="/Resource/logo_icon.ico" 
        Height="600" Width="900"  MinHeight="200" MinWidth="900">
    <Window.Resources>
        <ObjectDataProvider ObjectType="{x:Type ports:SerialPort}" MethodName="GetPortNames" x:Key="_PortNames"/>
    </Window.Resources>
    <Grid Margin="10,0,10,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5" Grid.RowSpan="2">
            <Border BorderBrush="DodgerBlue" BorderThickness="0">

            </Border>
        </Grid>

        <Menu Grid.Row="0" Grid.ColumnSpan="5" IsMainMenu="True"  FontFamily="Segoe UI" >
            <MenuItem Header="_File" Height="30">
                <MenuItem Header="Import config" Icon="{materialDesign:PackIcon Kind=Upload}" Command="{Binding Path=ImportConfigfileCommand}" />
                <Separator />
                <MenuItem Header="Save" Icon="{materialDesign:PackIcon Kind=ContentSave}" Command="{Binding Path=SaveConfigfileCommand}" />
                <MenuItem Header="Save As.." Command="{Binding Path=SaveAsConfigfileCommand}"  />
                <Separator />
                <MenuItem Header="Exit" Icon="{materialDesign:PackIcon Kind=ExitToApp}" Command="{Binding Path=CloseWindowCommand}" />
            </MenuItem>

            <MenuItem Header="_Edit" Height="30">
                <MenuItem Header="_Clear config" Icon="{materialDesign:PackIcon Kind=BackspaceReverseOutline}" Command="{Binding Path=ClearConfigfileCommand}" />
                <MenuItem Header="_Reset config" Icon="{materialDesign:PackIcon Kind=BackupRestore}" Command="{Binding Path=ResetConfigfileCommand}" />
            </MenuItem>

            <!--<MenuItem Header="_Device" Height="30" Command ="{Binding Path = UpdateComboBoxCommand}"  >
                -->
            <!--<MenuItem Header="_Communication" Icon="{materialDesign:PackIcon Kind=Usb}">
                    <MenuItem Header="CAN" IsCheckable="True" />
                    <MenuItem Header="UART" IsCheckable="True" />
                </MenuItem>-->
            <!--
                <MenuItem Header="Port" Icon="{materialDesign:PackIcon Kind=UsbPort}" >
                    <ComboBox ItemsSource="{Binding Path=ListPortNames}"
                              SelectedItem="{Binding Path= SelectPortChanged}" Width="100" />
                </MenuItem>
                <MenuItem Header="Connect" Icon="{materialDesign:PackIcon Kind=Connection}"/>
                <MenuItem Header="Run" Icon="{materialDesign:PackIcon Kind=Play}" />
            </MenuItem>-->

            <MenuItem Header="_Auto control" Height="30">
                <MenuItem Header="AC OUT 1 frequency Ramp up " />
                <MenuItem Header="AC OUT 2 Phase Ramp down " />
                <Separator />
                <MenuItem Header="_Configure setting" />
            </MenuItem>

            <MenuItem Header="_Log" Height="30">
                <MenuItem Header="_Log file config"
                          Command="{Binding ImportlogfileCommand}"
                          Icon="{materialDesign:PackIcon Kind=Login}" />
                <MenuItem 
                          Command="{Binding SelectPathCommand}"                         
                    Header="_Import log" Icon="{materialDesign:PackIcon Kind=MathLog}">
                    <MenuItem.ToolTip>
                        <ToolTip>
                            <StackPanel>
                                <TextBlock Text="{Binding LogPath}" Padding="4" />
                            </StackPanel>
                        </ToolTip>
                    </MenuItem.ToolTip>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="_Help" Height="30">
                <MenuItem x:Name="About_Item" Header="About" Click="About_Item_Click" />
                <MenuItem x:Name="UserManual_Item" Header="User manual" Click="UserManual_Item_Click" />
            </MenuItem>
        </Menu>
        <StackPanel Grid.Row="0" Grid.ColumnSpan="5" HorizontalAlignment="Right">
            <WrapPanel Grid.Row="0" Grid.ColumnSpan="5" >
                <TextBlock Text="Select port    " FontSize="14"  VerticalAlignment="Center"/>
                <Separator/>
                <ComboBox ItemsSource="{Binding Path=ListPortNames}" SelectedItem="{Binding Path= SelectPortChanged}" 
                          Width="80" Height="30" materialDesign:HintAssist.Hint="List Port" />
                <Button Padding="0" Height="30" Width="30" Style="{StaticResource MaterialDesignIconButton}" Command ="{Binding Path = UpdateComboBoxCommand}">
                    <materialDesign:PackIcon Kind="Reload" />
                </Button>
            </WrapPanel>
        </StackPanel>       

        <!-- =========================== -->

        <StackPanel Grid.Row="1" Grid.ColumnSpan="5">
            <ToolBar>
                <Button Padding="0" Command="{Binding Path=ControlStartButton}" IsEnabled="{Binding Path=ControlStartButtonEnabled}"  >
                    <Border  BorderBrush="Black" BorderThickness="0" >
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                            <materialDesign:PackIcon Kind="Flash" Height="19"  Foreground="Gold" VerticalAlignment="Center" />
                            <TextBlock Text="Start" Style="{StaticResource ResourceKey= TextBlock_custom}"></TextBlock>
                        </StackPanel>
                    </Border>
                </Button>
                <Separator />
                <Button Padding="0" Command="{Binding Path=ControlStopButton}" IsEnabled="{Binding Path=ControlStopButtonEnabled}"  >
                    <Border  BorderBrush="Black" BorderThickness="0" >
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                            <materialDesign:PackIcon Kind="Octagon" Height="19"  Foreground="OrangeRed" VerticalAlignment="Center" />
                            <TextBlock Text="Stop" Style="{StaticResource ResourceKey= TextBlock_custom}"></TextBlock>
                        </StackPanel>
                    </Border>
                </Button>
                <Separator />
                <StackPanel Orientation="Vertical">
                    <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                </StackPanel>
                <TextBlock Style="{StaticResource ResourceKey= TextBlock_custom}" Text="Connection" ToolTip="ON/OFF Connect device" />
                <ToggleButton IsChecked="{Binding ActiveConnectButton, Mode=TwoWay}" Command="{Binding ConnectToggleButtonCommand}" 
                              Style="{StaticResource ResourceKey= ToggleButton_custom}" ></ToggleButton>
                <TextBlock Style="{StaticResource ResourceKey= TextBlock_custom}" Text="Logging" />
                <ToggleButton IsChecked="{Binding ActiveLogButton, Mode=TwoWay}" Command="{Binding ToggleButtonCommand}"
                           Style="{StaticResource ResourceKey= ToggleButton_custom}" ToolTip="Start/Stop Write Log"  ></ToggleButton>
                <Separator />
                <Button x:Name="ConfigSignal_button" Content="Config Signal" ToolTip="Open Config Signal Window" Height="28" Margin=" 2" FontFamily="Segoe UI" FontSize="14"
                    IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                    Style="{StaticResource MaterialDesignPaperLightButton}" BorderBrush="White" Click="ConfigSignal_button_Click" />

                <Button x:Name="ControlOutput_button" Content="Control Output" ToolTip="Open Output Control Window" Height="28" Margin="2" FontFamily="Segoe UI" FontSize="14"
                     IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                     Style="{StaticResource MaterialDesignPaperLightButton}" BorderBrush="White" Click="ControlOutput_button_Click" />

                <Button x:Name="ConfigAutoControl_button" Content="Auto control" ToolTip="Open Auto Control Window" Height="28" Margin="2" FontFamily="Segoe UI" FontSize="14"
                     IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" 
                     Style="{StaticResource MaterialDesignPaperLightButton}" BorderBrush="White" Click="ConfigAutoControl_button_Click" />
              
            </ToolBar>
        </StackPanel>

        <!-- =========================== -->
        <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
            <ComboBox  materialDesign:HintAssist.Hint="" HorizontalAlignment="Stretch" Height="30" VerticalAlignment="Center"  Margin="2">
                <TreeView>
                    <CheckBox >
                        <StackPanel >
                            <TreeViewItem Header="Digital input signal">
                                <CheckBox>
                                    <StackPanel>
                                        <TreeViewItem Header="DIGITAL INPUT 1" />
                                    </StackPanel>
                                </CheckBox>
                                <CheckBox>
                                    <StackPanel>
                                        <TreeViewItem Header="DIGITAL INPUT 2" />
                                    </StackPanel>
                                </CheckBox>
                                <CheckBox>
                                    <StackPanel>
                                        <TreeViewItem Header="DIGITAL INPUT..." />
                                    </StackPanel>
                                </CheckBox>
                            </TreeViewItem>
                        </StackPanel>
                    </CheckBox>

                </TreeView>

                <ComboBoxItem >
                    <CheckBox>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Digital input signal"></TextBlock>
                        </StackPanel>
                    </CheckBox>
                </ComboBoxItem>
                <ComboBoxItem >
                    <CheckBox>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Analog input signal"></TextBlock>
                        </StackPanel>
                    </CheckBox>
                </ComboBoxItem>
                <ComboBoxItem >
                    <CheckBox>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="PWM input signal"></TextBlock>
                        </StackPanel>
                    </CheckBox>
                </ComboBoxItem>
                <ComboBoxItem >
                    <CheckBox>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="AC input signal"></TextBlock>
                        </StackPanel>
                    </CheckBox>
                </ComboBoxItem>
                <ComboBoxItem >
                    <CheckBox>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Digital output signal"></TextBlock>
                        </StackPanel>
                    </CheckBox>
                </ComboBoxItem>
                <ComboBoxItem >
                    <CheckBox>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Analog output signal"></TextBlock>
                        </StackPanel>
                    </CheckBox>
                </ComboBoxItem>
                <ComboBoxItem >
                    <CheckBox>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="PWM output signal"></TextBlock>
                        </StackPanel>
                    </CheckBox>
                </ComboBoxItem>
                <ComboBoxItem >
                    <CheckBox>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="AC output signal"></TextBlock>
                        </StackPanel>
                    </CheckBox>
                </ComboBoxItem>
            </ComboBox>
            <TextBlock IsHitTestVisible="False" Margin="10,5,0,0" Foreground="Gray" Text="Select signal"></TextBlock>
        </Grid>

        
        <!--function for select signal-->
        <Grid Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2">
            <ComboBox ItemsSource="{Binding Path= _PropetyVisibleVM.PropetiesVisible}"
                      Grid.Row="2"
                      Grid.Column="2"
                      HorizontalAlignment="Stretch"
                      Height="30"
                      VerticalAlignment="Center"
                      Margin="2"
                      x:Name="CBSelectPropety"
                      SelectionChanged="OnCbObjectsSelectionChanged"
                      >

                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox IsChecked = "{Binding Path = IsPropetyVisible}" Checked="OnCbObjectCheckBoxChecked" Unchecked="OnCbObjectCheckBoxChecked">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path = PropetyName}"/>
                            </StackPanel>
                        </CheckBox>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBlock IsHitTestVisible="False" Margin="10,5,0,0"  Foreground="Gray" Text="Select property"></TextBlock>
        </Grid>
        
        
        

        <!-- =========================== -->
        <!--ItemsSource="{Binding Path = SignalCollection}"-->

        <DockPanel Grid.Row="3" Grid.ColumnSpan="5" >
            <DataGrid HorizontalAlignment="Stretch"
                  AutoGenerateColumns="False" 
                  ScrollViewer.CanContentScroll="True"         
                  ScrollViewer.IsDeferredScrollingEnabled="True" 
                  ScrollViewer.HorizontalScrollBarVisibility="Visible"      
                  SelectionMode="Extended" 
                  AlternationCount="2"
                  x:Name="SigmntDG"
                  
                  CanUserSortColumns="True"
                  CanUserResizeColumns="True"
                  CanUserResizeRows="True">

                <DataGrid.Columns >
                    <DataGridTextColumn Width="Auto"
                   Binding="{Binding SignalName}"
                   Header="Signal name"
                   IsReadOnly="True"/>
                    <DataGridTextColumn Width="Auto"
                   Binding="{Binding Type}"
                   Header="Type"
                   IsReadOnly="True"/>

                    <DataGridTextColumn Width="Auto"
                   Binding="{Binding Channel}"
                   Header="Channel"
                   IsReadOnly="True"/>

                    <DataGridTextColumn Width="Auto"     
                   Binding="{Binding IO}"
                   Header="I/O"
                   IsReadOnly="True"/>

                    <DataGridTextColumn Width="Auto"
                   Binding="{Binding RawValue}"
                   Header="Raw value"
                   IsReadOnly="True"/>

                    <DataGridTextColumn Width="Auto"
                   Binding="{Binding Value}"
                   Header="Value"
                   IsReadOnly="True"/>

                    <DataGridTextColumn Width="Auto"
                   Binding="{Binding Unit}"
                   Header="Unit"
                   IsReadOnly="True" />

                    <DataGridTextColumn Width="Auto"
                   Binding="{Binding MinLabel}"
                   Header="Min"/>

                    <DataGridTextColumn Width="Auto"
                   Binding="{Binding MaxLabel}"
                   Header="Max"
                   IsReadOnly="True"/>

                    <DataGridTextColumn Width="Auto"
                   Binding="{Binding Offset}"
                   Header="Offset"
                   IsReadOnly="True"/>

                    <DataGridTextColumn Width="Auto"
                   Binding="{Binding Resolution}"
                   Header="Resolution"
                   IsReadOnly="True"/>


                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>

        <ToolBarTray Grid.Row="5" Grid.ColumnSpan="5" >
            <ToolBar>
                <StackPanel>
                    <TextBlock Text="{Binding TextBlock_ConnectionState, TargetNullValue='Wait select port'}" Foreground ="{Binding Path = StateColor}"  FontSize="12" />
                    <WrapPanel>
                        <TextBlock Style="{StaticResource ResourceKey= TextBlock_custom}" Text="Running time" FontSize="10" />
                        <TextBlock Width="80" Style="{StaticResource ResourceKey= TextBlock_custom}" Text="{Binding RunningTime, TargetNullValue='00:00:00.000'}" FontSize="10" />
                        <Separator />
                        <TextBlock Style="{StaticResource ResourceKey= TextBlock_custom}" Text="Logging time" FontSize="10" />
                        <TextBlock Width="80" Style="{StaticResource ResourceKey= TextBlock_custom}" Text="{Binding ElapsedTime, TargetNullValue='00:00:00.000'}" FontSize="10"  />
                    </WrapPanel>
                </StackPanel>
            </ToolBar>
        </ToolBarTray>
        <!--<ProgressBar  Grid.Row="5" Grid.Column="01" Grid.ColumnSpan="4" Value="40" Tag="20%"  Maximum="100" Margin="5"/>-->
        <!--<Slider  Grid.Row="4" Grid.Column="01" Maximum="50"  Minimum="0"  Value="35" VerticalAlignment="Center" Grid.ColumnSpan="3"  Grid.RowSpan="2" />-->

    </Grid>
</Window>
